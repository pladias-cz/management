name: Publish a Docker image
on:
    push:
        tags: [ '*' ]
        branches:
            - main
    workflow_dispatch:  # Manual run

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    publish-docker-image:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            attestations: write
            id-token: write
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4

            #install PHP dependencies
            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '8.4'
                    tools: composer:v2

            -   name: Get composer cache directory
                id: composer-cache
                working-directory: ./htdocs
                run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            -   name: Cache composer dependencies
                uses: actions/cache@v4.2.0
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: ${{ runner.os }}-composer-

            -   name: Install Composer dependencies
                working-directory: ./htdocs
                run: composer install --no-progress --prefer-dist --optimize-autoloader

            #docker image
            -   name: Log in to the Container registry
                uses: docker/login-action@v3.3.0
                with:
                    registry: ${{ env.REGISTRY }}
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}
            -   name: Extract metadata (tags, labels) for Docker
                id: meta
                uses: docker/metadata-action@v5.6.1
                with:
                    images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            -   name: Get git tag
                id: get_tag
                run: echo "TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV
            -   name: Build and push Docker image
                id: push
                uses: docker/build-push-action@v6.13.0
                with:
                    context: .
                    push: true
                    pull: true
                    tags: ${{ steps.meta.outputs.tags }}
                    labels: ${{ steps.meta.outputs.labels }}
                    build-args: |
                        GIT_TAG=${{ env.TAG }}
            -   name: Generate artifact attestation
                uses: actions/attest-build-provenance@v2
                with:
                    subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
                    subject-digest: ${{ steps.push.outputs.digest }}
                    push-to-registry: true
